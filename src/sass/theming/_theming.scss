// =============================================================================
// Theming
// =============================================================================

// The default theme goes first. Following themes will override the default.

// An example:
// Using t-pink, now you can use any `.u-current-...` class inside this
// block and it will take the themes variables.
// <div class="t-pink">
//      This will have the theme background color
//      <div class="u-current-bg-color">...</div>
// </div>

$themes: (
    'pink': (
        theme-color: #f5b1d8,
        text-color: #333
    ),
    'green': (
        theme-color: #a5cc8e,
        text-color: #333
    ),
    'blue': (
        theme-color: #509ac7,
        text-color: #333
    )
);

@each $alias, $colors in $themes {
    $theme-color: map-get($colors, theme-color);
    $text-color: map-get($colors, text-color);

    .t-#{$alias} {
        // Only use the --bg modifier when you want to apply background
        // color to the container you have set the theme class on.
        // eg. <div class-"t-green t-green--bg"></div>
        &.t-#{$alias}--bg,
        .u-current-bg-color {
            background-color: $theme-color;
        }

        .u-current-color {
            color: $theme-color;
        }

        .u-current-color\:hover {
            &:hover {
                color: $theme-color;
            }
        }

        .u-current-text-color {
            color: $text-color;
        }
    }

    // Use these outside a "theme block", when you
    // want to theme an individual element.

    .u-bg-color-#{$alias} {
        background-color: $theme-color;
    }

    .u-color-#{$alias} {
        color: $theme-color;
    }

    .u-color-#{$alias}\:hover {
        &:hover {
            color: $theme-color;
        }
    }

    .u-text-color-#{$alias} {
        color: $text-color;
    }
}
